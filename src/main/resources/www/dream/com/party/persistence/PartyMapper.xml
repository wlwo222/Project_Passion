<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="www.dream.com.party.persistence.PartyMapper">
	<!-- resultMap : DB Table 정의 내역과 객체 정의 내역에 있어 mismatch(부조화)가 있을 시 이를 연동, 
		짝 지어주는 정보를 정의함 -->
	<resultMap type="www.dream.com.party.model.Party" id="partyMap"
		extends="www.dream.com.common.persistence.CommonMngVOMapper.commonMngVOMap">
		<id property="userId" column="user_id"></id>
		<result property="userPwd" column="user_pwd"></result>
		<result property="name" column="name"></result>
		<result property="birthDate" column="birth_dt"></result>
		<result property="male" column="sex"></result>
		<result property="enabled" column="enabled"></result>
		<!-- collection : Master-Detail(1:N) 구조에서 Join Query를 통하여 
		여러 테이블에 들어 있는 정보를 한번에 받아서 java List 속성에 부품 객체를 만들어 조회하는 방법
		columnPrefix:각 Table에 들어 있는 컬럼 이름이 중복 될 때 Column Alias를 SQL에서 달고
		이를 객체 구성 시 참조하도록 지원함
		-->
		<collection property="listContactPoint" columnPrefix="cp_" 
				resultMap="contactPointMap">
		</collection>
		<!-- discriminator : 판별자. 상속 광련 활용 -->
		<discriminator javaType="String" column="descrim">
			<case value="Admin" resultMap="adminResultMap" />
			<case value="Manager" resultMap="managerResultMap" />
			<case value="User" resultMap="userResultMap" />
		</discriminator>
	</resultMap>
	<resultMap id="adminResultMap"
		type="www.dream.com.party.model.Admin" extends="partyMap">
	</resultMap>
	<resultMap id="managerResultMap"
		type="www.dream.com.party.model.Manager" extends="partyMap">
	</resultMap>
	<resultMap id="userResultMap"
		type="www.dream.com.party.model.Member" extends="partyMap">
	</resultMap>

	<resultMap type="www.dream.com.party.model.ContactPoint" id="contactPointMap" 
	    extends="www.dream.com.common.persistence.CommonMngVOMapper.commonMngVOMap">
		<id property="contactPointType" column="contact_point_type"></id>
		<result property="info" column="info"></result>
	</resultMap>

	<!-- public List<Party> getList(); -->
	<select id="getList" resultMap="partyMap">
	<![CDATA[
	select p.*,
	       cp.user_id cp_user_id, cp.contact_point_type cp_contact_point_type, 
	       cp.info cp_info, cp.reg_dt cp_reg_dt, cp.upt_dt cp_upt_dt 
	  from s_party p left outer join s_contact_point cp on p.user_id = cp.user_id 
	]]>
	</select>
	
	<!--  public Party findPartyByUserId(String userId); -->
	<select id="findPartyByUserId" resultMap="partyMap">
	<![CDATA[
	select user_id, user_pwd, name, descrim
	  from s_party p
	 where user_id = #{userId}
	]]>
	</select>
	
	<!-- public int joinMember(Member party);-->
	<insert id="joinMember">
	insert all
		into s_party(USER_ID, USER_PWD, NAME, BIRTH_DT, SEX, DESCRIM)
		values(#{userId}, #{userPwd}, #{name}, #{birthDate}, #{male}, 'User')
		<foreach collection="listContactPoint" item="CP">
			into s_contact_point(USER_ID, CONTACT_POINT_TYPE, INFO) values(#{userId}, #{CP.contactPointType}, #{CP.info})
		</foreach>
		select * from dual	
    </insert>
    
	<!-- public int setPwd(Party p); -->
	<update id="setPwd">
		update s_party 
		   set user_pwd = #{userPwd}
		 where user_id = #{userId}
	</update>
	
	<!-- public int upDateMember(Member party); -->
	
	<update id="updateMember">
		BEGIN
		UPDATE s_party p 
		   SET p.name = #{name}
         where
         p.user_id = #{userId};
   	<foreach collection="listContactPoint" item="CP" open=""  close="; END;" separator=";">
		UPDATE s_contact_point cp SET cp.info=#{CP.info}
         <where>
        cp.contact_point_type=#{CP.contactPointType}
         AND cp.user_id=#{userId}
         </where>	
    </foreach>
    </update>
    
    <!-- public int resignMember(String userId); -->
   	<delete id="resignMember">
		begin
		delete from s_contact_point cp
		   	 where cp.user_id = #{UserId};
		   	 
		delete from s_party p
		   	 where p.user_id = #{UserId};
		end;
   	</delete> 
   
    
	<!--            연락처 관련 정의 영역               -->
	<resultMap type="www.dream.com.party.model.ContactPointTypeVO" id="cpMap">
		<id property="cpType" column="contact_point_type"></id>
		<result property="description" column="description"></result>
	</resultMap>
	
	<!-- public List<ContactPointTypeVO> getCPTypeList(); -->
	<select id="getCPTypeList" resultMap="cpMap">
	<![CDATA[
	select * from s_contact_point_type
	]]>
	</select>
</mapper>