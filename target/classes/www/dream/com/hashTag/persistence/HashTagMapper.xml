<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="www.dream.com.hashTag.persistence.HashTagMapper">
	<resultMap type="www.dream.com.hashTag.model.HashtagVO"
		id="rmHashtagVO">
		<id property="id" column="id"></id>
		<result property="hashtag" column="hashtag"></result>
		<result property="description" column="description"></result>
		<result property="occurCnt" column="occur_cnt"></result>
	</resultMap>

	<!-- public Set<HashtagVO> findExisting(@Param("setHashTag") Set<String> setHashTag); -->
	<select id="findExisting" resultMap="rmHashtagVO">
		select *
		  from s_hashtag
		 where hashtag in 
			<foreach collection="setHashTag" item="word" open="(" separator="," close=")">
				#{word}
			</foreach>
	</select>
	
	<!-- public Set<HashtagVO> findPrevUsedHashTag(@Param("opponent") IHashTagOpponent hashTagOpponent, @Param("curSearch") Set<String> curSearch); -->
	<select id="findPrevUsedHashTag" resultMap="rmHashtagVO">
		select h.id, h.hashtag, h.description, m.occur_cnt
		  from sm_ht2StringId m, s_hashtag h
		 where m.opponent_type = #{opponent.type}
		   and m.opponent_id = #{opponent.id}
		   and m.hashtag_id = h.id
		   and h.hashtag in 
			<foreach collection="curSearch" item="word" open="(" separator="," close=")">
				#{word}
			</foreach>
	</select>
		
	<!-- public String getIds(int cnt); -->
	<select id="getIds" resultType="string">
		select genMultiIds(#{cnt}) from dual
	</select>
	
	<!-- public int createHashTag(@Param("setNewHashTag") Set<HashtagVO> newHashtag) -->
	<insert id="createHashTag">
		insert all
		<foreach collection="setNewHashTag" item="ht">
			into s_hashtag(id, hashtag) values(#{ht.id}, #{ht.hashtag})
		</foreach>
		select * from dual		
	</insert>
	
	<!-- public int insertMapBetweenStringId(@Param("setExisting") Set<HashtagVO> setExisting,  @Param("opponent") IHashTagOpponent opponent); -->
	<insert id="insertMapBetweenStringId">
		insert all
		<foreach collection="setExisting" item="hashtag">
			into sm_ht2StringId(hashtag_id, opponent_type, opponent_id, occur_cnt) 
				values(#{hashtag.id}, #{opponent.type}, #{opponent.id}, #{hashtag.occurCnt})
		</foreach>
		select * from dual
	</insert>

<!-- public void deleteMapBetweenStringId(@Param("opponent") IHashTagOpponent hashTagOpponent); -->
	<delete id="deleteMapBetweenStringId">
		delete from sm_ht2StringId
		 where opponent_type = #{opponent.type}
		   and opponent_id = #{opponent.id}
	</delete>
	
	<!-- public void deleteMapBetweenOpponentStringId(@Param("setExisting") Set<HashtagVO> setExisting,
			 @Param("opponent") IHashTagOpponent hashTagOpponent); -->
	<delete id="deleteMapBetweenOpponentStringId">
		delete from sm_ht2StringId
		 where opponent_type = #{opponent.type}
		   and opponent_id = #{opponent.id}
		   and hashtag_id in 
			<foreach collection="setExisting" item="obj" open="(" separator="," close=")">
				#{obj.id}
			</foreach>
	</delete>
</mapper>