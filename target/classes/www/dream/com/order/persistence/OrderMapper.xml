<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="www.dream.com.order.persistence.OrderMapper">
	<resultMap	extends="www.dream.com.common.persistence.CommonMngVOMapper.commonMngVOMap"
		id="rmOrderVO" type="www.dream.com.order.model.OrderVO">
		<id column="order_id" property="orderId" />
		<result column="order_status" property="orderStatus" />
		<result column="customer_addr" property="customerAddr" />
		<result column="customer_id" property="customerId" />
		<result column="customer_name" property="customerName" />
		<result column="customer_phnum" property="customerPhnum" />
		<result column="p_id" property="productId" />
		<result column="quantity" property="quantity" />
		<result column="total_price" property="totalPrice" />
		<association property="product" resultMap="www.dream.com.product.persistence.ProductMapper.rmProduct"
					columnPrefix="p_"></association>
		<discriminator column="descrim" javaType="String">
			<case resultMap="rmOrderVO" value="order" />
			<case resultMap="rmCartVO" value="cart" />
		</discriminator>
	</resultMap>
	
	<!-- public List<OrderVO> getOrdersByUserId(String userId); -->
	<select id="getOrdersByUserId" resultMap="rmOrderVO">
		select o.*, p.p_id p_p_id, p.p_name p_p_name, p.price p_price
		  from orders o, s_products p
		 where customer_id = #{userId}
		   and o.p_id = p.p_id
	</select>

	<!-- productVO는 prefix="ad_"로 부가정보를 List로 만듭니다. -->
	<resultMap extends="rmOrderVO" id="rmCartVO"
		type="www.dream.com.order.model.CartVO">
		<id column="customer_id" property="customerId" />
		<result column="productCount" property="p_count" />
		<collection property="products"	resultMap="www.dream.com.product.persistence.ProductMapper.rmProduct"
			columnPrefix="p_" autoMapping="true">
		</collection>
			
	</resultMap>
	
	
	<!-- ■■■■■■■■■■■■■■■■■■■■■ Cart ■■■■■■■■■■■■■■■■■■■■■ -->
	<!-- public ProductVO findProductInCart(@Param("productId")String productId, @Param("customerId")String customerId); -->
	<select id="findProductInCart" resultMap="www.dream.com.product.persistence.ProductMapper.rmProduct">
		select p.*
		  from cart c, s_products p
		 where c.customer_id = #{userId}
	       and c.p_id = p.p_id
	       and p.p_id = #{productId}
	</select>
		
	<!-- public int isCartExist(String customerId); -->
	<select id="isCartExist" resultType="_int">
		select count(*)
		  from cart
	     where customer_id = #{customerId}
	</select>
		   	   
	<!-- public CartVO getCartByUserId(String userId); -->
	<select id="getCartByUserId" resultMap="rmCartVO">
		select c.*, p.p_id p_p_id, p.category_id p_category_id, p.p_name p_p_name,
		        p.price p_price 
		  from cart c left outer join s_products p on c.p_id = p.p_id,
		  	s_products s left outer join s_product_add_info pai on s.p_id = pai.p_id
		 where c.customer_id = #{userId}
		   and s.p_id = c.p_id
	</select>
	
	<!-- public int putpdtinCart(@Param("cart")CartVO newcart, @Param("newProductIdsAndQ")Map<String, String> newProductIdsAndQ); -->
	<!-- Foreach문으로 한꺼번에 정보를 넣어 줍니다. -->
	<insert id="putpdtinCart" parameterType="java.util.Map">
	insert all
		<foreach collection="newProductIdsAndQ" item="quantity" index="productID">
			into cart(customer_id, p_id, p_count)
			values( #{cart.customerId}, #{productID}, ${quantity})
		</foreach>
		select * from dual	
    </insert>

	<!-- public int updateCart(@Param("cart")CartVO cart, @Param("existingProductIdAndQ")Map<String, String> existingProductIdAndQ, 
	@Param("newProductIdsAndQ")Map<String, String> newProductIdsAndQ); -->
	<update id="updateCart" parameterType="java.util.Map">
		BEGIN
		<foreach collection="existingProductIdAndQ" item="ePQuantity" open="" separator=";" close=";" index="ProductID">
			UPDATE cart
			   SET p_count = ${ePQuantity}
			 WHERE customer_id= #{cart.customerId}
			   AND p_id = #{ProductID}
		</foreach>
		
		<foreach collection="newProductIdsAndQ" item="nPQuantity" open="" separator=";" close=";" index="ProductID">
			INSERT 	INTO cart(customer_id, p_id, p_count)
			VALUES (#{cart.customerId}, #{ProductID}, ${nPQuantity})
		</foreach>
		 END;
    </update>

	<!-- ■■■■■■■■■■■■■■■■■■■■■ Order ■■■■■■■■■■■■■■■■■■■■■ -->
	<resultMap	id="rmOrderListVO" type="www.dream.com.order.model.OrderListVO">
		<id column="order_id" property="orderId" />
		<result column="quantity" property="quantity" />
		<result column="p_id" property="productId" />
		<result column="total_price" property="totalPrice" />
	</resultMap>

</mapper>